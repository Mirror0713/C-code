3X3的OX棋，输入1代表X，0代表O，判断谁胜利或者平局

#include <stdio.h>

int main(void) {

	const int size = 3; //3X3矩阵
	int board[size][size]; //矩阵
	int numX; //X的个数
	int numO; //O的个数
	int result = -1; //-1表示没人赢，1表示X赢，0表示O赢

	//读入矩阵
	printf("X用1表示，O用0表示。\n");
	for (int i=0;i<size;i++) {
		for (int j = 0; j < size; j++) {
			printf("输入第%d行第%d列：",i+1,j+1);
			scanf_s("%d", &board[i][j]);
		}
	}

	//检查行
	for (int i=0;i<size && result==-1;i++) { //行数从0到2，只要result还是-1表示没人赢就继续下去
		numX = 0;
		numO= 0;
		for (int j=0;j<size;j++) {
			if (board[i][j] ==1) {
				numX ++;
			}else {
				numO ++;
			}
		}
		if (numX==size) {
			result = 1;
		}
		else
		{
			result = 0;
		}
	}

	//检查列
	for (int j = 0; j < size && result == -1; j++) { //列数从0到2，只要result还是-1表示没人赢就继续下去
		numX = 0;
		numO = 0;
		for (int i = 0; i < size; i++) {
			if (board[i][j] == 1) {
				numX++;
			}
			else {
				numO++;
			}
		}
		if (numX == size) {
			result = 1;
		}else if(numO == size)
		{
			result = 0;
		}
	}

	//检查对角线1
	numX = 0;
	numO = 0;
	for (int i = 0; i < size; i++) {
		if (board[i][i] = 1) {
			numX++;
		}
		else {
			numO++;
		}
	}
	if (numX == size) {
		result = 1;
	}
	else if (numO == size)
	{
		result = 0;
	}

	//检查对角线2
	numX = 0;
	numO = 0;
	for (int i = 0; i < size; i++) {
		if (board[i][size-1-i] = 1) {
			numX++;
		}
		else {
			numO++;
		}
	}
	if (numX == size) {
		result = 1;
	}
	else if (numO == size)
	{
		result = 0;
	}

	//最后判断
	if (result == 1) {
		printf("\nX赢了。\n");
	}else if(result == 0)
	{
		printf("\nY赢了。\n");
	}else
	{
		printf("\n平局。\n");
	}

	return 0;
}